{
	"apiVersion": 1,
	"groups": [
		{
			"orgId": 1,
			"name": "daily",
			"folder": "V3",
			"interval": "1d",
			"rules": [
				{
					"uid": "ddj3zyfnvery8c",
					"title": "Missing Stocks",
					"condition": "B",
					"data": [
						{
							"refId": "A",
							"relativeTimeRange": {
								"from": 600,
								"to": 0
							},
							"datasourceUid": "P47ACC421B078165A",
							"model": {
								"datasource": {
									"type": "grafana-postgresql-datasource",
									"uid": "P47ACC421B078165A"
								},
								"editorMode": "code",
								"format": "table",
								"hide": false,
								"intervalMs": 1000,
								"maxDataPoints": 43200,
								"rawQuery": true,
								"rawSql": "SELECT COUNT(*)\r\nFROM (\r\n    SELECT pharmacy_id, stock_updated_at, pharmacy_v2_id\r\n    FROM pharmacy_lgo\r\n    GROUP BY pharmacy_id\r\n    HAVING MAX(stock_updated_at) < NOW() - INTERVAL '4 days'\r\n) AS subquery;",
								"refId": "A",
								"sql": {
									"columns": [
										{
											"parameters": [],
											"type": "function"
										}
									],
									"groupBy": [
										{
											"property": {
												"type": "string"
											},
											"type": "groupBy"
										}
									],
									"limit": 50
								}
							}
						},
						{
							"refId": "B",
							"relativeTimeRange": {
								"from": 600,
								"to": 0
							},
							"datasourceUid": "__expr__",
							"model": {
								"conditions": [
									{
										"evaluator": {
											"params": [0],
											"type": "gt"
										},
										"operator": {
											"type": "and"
										},
										"query": {
											"params": ["C"]
										},
										"reducer": {
											"params": [],
											"type": "last"
										},
										"type": "query"
									}
								],
								"datasource": {
									"type": "__expr__",
									"uid": "__expr__"
								},
								"expression": "A",
								"intervalMs": 1000,
								"maxDataPoints": 43200,
								"refId": "B",
								"type": "threshold"
							}
						}
					],
					"noDataState": "NoData",
					"execErrState": "Error",
					"for": "1d",
					"annotations": {},
					"labels": {},
					"isPaused": false
				}
			]
		}
	]
}
